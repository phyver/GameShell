#!/usr/bin/env bash

#FIXME, can we convert that to POSIX sh?
#The main problem is the use of arrays to define designs...

# Print a progress bar. Each character received on [stdin] advances the
# animation. The animation stops when the end of file is reached. If no
# argument is provided, a random animal-themed progress bar is picked.
# Otherwise, the name of a specific progress bar can be passed as the
# first (and only) argument. Examples of value are 'bat' or 'snake'.
progress_bar () {

  if [ -n "$1" ]
  then
    # Use specified progress bar.
    design="$1"
  else
    case "$((RANDOM%7))" in        # only modulo 7, to get an "interesting" design
      0) design=bat ;;
      1) design=snake ;;
      2) design=caterpillar ;;
      3) design=snail ;;
      4) design=spider ;;
      5) design=fish-back-and-forth ;;
      6) design=duck ;;
      7) design=centipede ;;
      8) design=ant ;;
      9) design=fish ;;
      10) design=large-fish ;;
      11) design=dots ;;
      12) design=rotation ;;
    esac
  fi

  case $design in
    "dots")
      # simple dots
      STR=('.')
      PRE=''
      POST='\n'
      MSG=''
      ;;

    "rotation")
      # rotating bar
      STR=('\b|' '\b/' '\b-' '\b\\')
      PRE='-'
      POST='\b \b'
      MSG=""
      ;;

    "bat")
      # flying bat
      STR=('\b\b\b \,/' '\b\b\b \,/' '\b\b\b \,/' '\b\b\b \,/'
           '\b\b\b /`\' '\b\b\b /`\' '\b\b\b /`\' '\b\b\b /`\')
      PRE='   '
      POST='\b\b\b   \r'
      MSG="$(gettext "While you are waiting, a bat flies by...")\n"
      ;;

    "snake")
      # slithering snake
      STR=('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b __/\__/\__/\<:>'
           '\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b _/\__/\__/\_<:>'
           '\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b /\__/\__/\__<:>'
           '\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b \__/\__/\__/<:>')
      PRE='\__/\__/\__/<:>'
      POST='\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b               \r'
      MSG="$(gettext "While you are waiting, a snake slithers by...")\n"
      ;;

    "centipede")
      # crawling centipede
      STR=('\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b ,`,`,`,`,`,`,`(:)'
           '\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b`,`,`,`,`,`,`,(:)')
      PRE='`,`,`,`,`,`,`,(:)'
      POST='\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                  \r'
      MSG="$(gettext "While you are waiting, a centipede crawls by...")\n"
      ;;

    "ant")
      # crawling ant
      STR=('\b\b\b\b\b >|<()')
      PRE='>|<()'
      POST='\b\b\b\b\b     \r'
      MSG="$(gettext "While you are waiting, an ant crawls by...")\n"
      ;;

    "fish")
      # Swimming fish (small)
      STR=('\b\b\b ><>')
      PRE='><>'
      POST='\b\b\b   \r'
      MSG="$(gettext "While you are waiting, a fish swims by...")\n"
      ;;

    "fish-back-and-forth")
      # Swimming fish (small) going back and forth
      STR=('\b\b\b ><>' '\b\b\b ><>' '\b\b\b ><>' '\b\b\b ><>'
           '\b\b\b ><>' '\b\b\b ><>' '\b\b\b ><>' '\b\b\b ><>'
           '\b\b\b   \b\b\b\b<><' '\b\b\b   \b\b\b\b<><'
           '\b\b\b   \b\b\b\b<><' '\b\b\b   \b\b\b\b<><'
           '\b\b\b   \b\b\b\b<><' '\b\b\b   \b\b\b\b<><'
           '\b\b\b   \b\b\b\b<><' '\b\b\b   \b\b\b\b<><')
      PRE='><>'
      POST='\b\b\b   \r'
      MSG="$(gettext "While you are waiting, you see a fish swimming in circles...")\n"
      ;;

    "large-fish")
      # Swimming fish (large)
      STR=("\b\b\b\b\b\b\b\b ><(((('>")
      PRE="><(((('>"
      POST='\b\b\b\b\b\b\b\b        \r'
      MSG="$(gettext "While you are waiting, a large fish swims by...")\n"
      ;;

    "snail")
      # Snail
      STR=('\b\b\b\b\b\b\b_(@)__/"'
           '\b\b\b\b\b\b\b\b__(@)_/"'
           '\b\b\b\b\b\b\b\b _(@)_/"')
      PRE='_(O)_/"'
      POST='\b\b\b\b\b\b\b\b        \r'
      MSG="$(gettext "While you are waiting, a snail goes by...")\n"
      ;;

    "caterpillar")
      STR=("\b\b\b\b\b\b\b\b\b ___^___@"
           "\b\b\b\b\b\b\b\b __/\__@"
           "\b\b\b\b\b\b\b _/^\_@"
           "\b\b\b\b\b\b __/\__@"
           "\b\b\b\b\b\b\b ___^___@"
           "\b\b\b\b\b\b\b\b\b ________@")
      PRE='_______@"'
      POST='\b\b\b\b\b\b\b\b\b         \r'
      MSG="$(gettext "While you are waiting, a caterpillar crawls by...")\n"
      ;;

    "duck")
      STR=(
      '\b\b\b\b\\_@<'
      '\b\b\b\b \\_@='
      '\b\b\b\b\\_@='
      '\b\b\b\b\\_@<')
      PRE='\\_@<'
      POST='\b\b\b\b\b     \r'
      MSG="$(gettext "While you are waiting, a duck swims by...")\n"
      ;;

    "spider")
      STR=(
      '\b\b\b\b\b //o\\\\'
      '\b\b\b\b\b //o\\\\'
      '\b\b\b\b\b///o\\'
      '\b\b\b\b\b///o\\'
      )
      PRE='//o\\\\'
      POST='\b\b\b\b\b     \r'
      MSG="$(gettext "While you are waiting, a spider crawls by...")\n"
      ;;

    *)
      echo "Unknown progress kind."
      return 1
      ;;
  esac

  # Hide cursor.
  tput civis 2> /dev/null
  trap 'tput cnorm 2> /dev/null;echo;exit 1' INT TERM QUIT

  # Print initial message.
  echo -en "$MSG"

  # Make progress for each character read on [stdin].
  L=${#STR[@]}
  echo -en "$PRE"
  while read -rn1 C
  do
    echo -en "${STR[$COUNT]}"
    COUNT=$(((COUNT+1)%L))
    # Slow down the animation a little bit.
    sleep .1
  done
  echo -en "$POST"

  # Show cursor.
  tput cnorm 2> /dev/null
}

progress_bar "$@"
